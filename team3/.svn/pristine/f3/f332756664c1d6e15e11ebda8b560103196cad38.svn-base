package net.yangchoo.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import net.yangchoo.domain.ChatContentsVO;
import net.yangchoo.domain.ChatVO;
import net.yangchoo.domain.MemberVO;
import net.yangchoo.mapper.ChatMapper;
import net.yangchoo.mapper.ChatMessageMapper;

@Service
public class ChatServiceImpl implements ChatService {

	@Autowired
	private ChatMapper chatMapper;

	@Autowired
	private MemberService memberService;

	@Override
	public Map<String, MemberVO> getMemberInfo(String userEmail) {
		Map<String, MemberVO> memberInfo = new HashMap<String, MemberVO>();
		MemberVO member = memberService.read(userEmail);
		memberInfo.put("Member", member);
		return memberInfo;
	}

	@Autowired
	private ChatMessageMapper chatMessageMapper;

	@Override
	public int chatRoomInsert(String chatId) {
		return chatMapper.chatRoomInsert(chatId);
	}

	@Override
	public int chatRoomTargetInsert(Integer chatRoomNo, String chatId) {
		return chatMapper.chatRoomTargetInsert(chatRoomNo, chatId);
	}

	@Override
	public List<ChatVO> chatRoomSelectAll(String chatId) {
		return chatMapper.chatRoomSelectAll(chatId);
	}

	@Override
	public Integer ChatRoomGetCurrentNo() {
		return chatMapper.ChatRoomGetCurrentNo();
	}

	@Override
	public boolean duplicateCheck(String chatId, String targetId) {
		boolean isDuplicated = false;
		List<ChatVO> chatList = chatMapper.chatRoomSelectAll(chatId);
		for (ChatVO chatVO : chatList) {
			if (chatVO.getChatId().equalsIgnoreCase(targetId)) {
				isDuplicated = true;
			}
		}
		return isDuplicated;
	}

	@Override
	public int chatRoomDelete(int chatRoomNo) {
		return chatMapper.chatRoomDelete(chatRoomNo);
	}

	@Override
	public int chatMessageInsert(ChatContentsVO chatContentsVO) {
		// TODO Auto-generated method stub
		return chatMessageMapper.chatMessageInsert(chatContentsVO);
	}

	@Override
	public List<ChatContentsVO> chatRoomSelectOne(int chatRoomNo) {
		return chatMessageMapper.chatRoomSelectOne(chatRoomNo);
	}

	@Override
	public Boolean createChatRoom(String chatId, String targetId) {
		if (duplicateCheck(chatId, targetId)) {
			return false;
		} 
		if (chatMapper.chatRoomInsert(chatId) > 0) {
			chatRoomTargetInsert(chatMapper.ChatRoomGetCurrentNo(), targetId);
			return true;
		}
		return false;
	}

}
