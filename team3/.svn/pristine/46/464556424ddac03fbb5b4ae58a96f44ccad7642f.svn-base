package net.yangchoo.controller;

/** 
 * 작성자 : 구본희
 * 약관동의 페이지
 */
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.github.scribejava.core.model.OAuth2AccessToken;

import lombok.extern.log4j.Log4j;
import net.yangchoo.domain.MemberVO;
import net.yangchoo.domain.NaverLoginVO;
import net.yangchoo.security.domain.CustomUser;
import net.yangchoo.service.MemberService;

/**
 * Handles requests for the application home page.
 */
@Controller
@Log4j
public class LoginController {

	/* NaverLoginBO */
	private NaverLoginVO naverLoginVO;
	
	@Autowired
	private MemberService memberService;

	private String apiResult = null;
	
	@Autowired
	private void setNaverLoginBO(NaverLoginVO naverLoginVO) {
		this.naverLoginVO = naverLoginVO;
	}
	//로그인 첫 화면 요청 메소드
	
	
	@RequestMapping(value = "/naverLogin", method = { RequestMethod.GET, RequestMethod.POST })
	public String naverLogin(Model model, HttpSession session) {
		
		/* 네이버아이디로 인증 URL을 생성하기 위하여 naverLoginBO클래스의 getAuthorizationUrl메소드 호출 */
		String naverAuthUrl = naverLoginVO.getAuthorizationUrl(session);
		
		//https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=sE***************&
		//redirect_uri=http%3A%2F%2F211.63.89.90%3A8090%2Flogin_project%2Fcallback&state=e68c269c-5ba9-4c31-85da-54c16c658125
		System.out.println("네이버:" + naverAuthUrl);
		
		//네이버 
		model.addAttribute("url", naverAuthUrl);
		
		/* 생성한 인증 URL을 View로 전달 */
		return "memberLogin";
	}
	
	//네이버 로그인 성공시 callback호출 메소드
	@RequestMapping(value = "/callback", method = { RequestMethod.GET, RequestMethod.POST })
	public String callback(Model model, @RequestParam String code, @RequestParam String state, HttpSession session)
			throws IOException, ParseException {
		System.out.println("여기는 callback");
		OAuth2AccessToken oauthToken;
		
		JSONParser parser= new JSONParser();
        oauthToken = naverLoginVO.getAccessToken(session, code, state);
        //로그인 사용자 정보를 읽어온다.
	    apiResult = naverLoginVO.getUserProfile(oauthToken);
	    MemberVO memberVO = new MemberVO();
	    System.out.println(apiResult);
	    
	    Object obj = (Object)parser.parse(apiResult);

	    JSONObject jobj = (JSONObject)obj;
	    
	    String email = (String)((JSONObject)jobj.get("response")).get("email");
	    String id = (String)((JSONObject)jobj.get("response")).get("id");
	   
	    
		model.addAttribute("result", apiResult);
		model.addAttribute("id", id);
		model.addAttribute("email", email);
		session.setAttribute("info", apiResult);
		session.setAttribute("email", email);
		session.setAttribute("id", id);
		
		//memberVO.setu
		//log.warn(memberService.oauthLogin(id));
		//System.out.println(memberMapper.oauthLogin(id));
		//System.out.println(memberService.oauthLogin(id));
	
		memberVO = memberService.oauthLogin(id);
		if(memberVO == null){
			//return "redirect:/board/list";
			return "naverTerms";
		}
		MemberVO findbyauth = memberService.read(memberVO.getUserEmail()); 
		List<GrantedAuthority> roles = new ArrayList<>(1);
		roles.add(new SimpleGrantedAuthority(findbyauth.getAuthList().get(0).getUserAuth()));
/*		findbyauth.getAuthList();
		System.out.println(findbyauth);*/
		//roles.add(new SimpleGrantedAuthority(findbyauth.getAuthList().get(1)));
		log.info(findbyauth);
		CustomUser user = new CustomUser(findbyauth);
		log.info(user);
		Authentication auth = new UsernamePasswordAuthenticationToken(user, null, roles);
		SecurityContextHolder.getContext().setAuthentication(auth);
		
        /* 네이버 로그인 성공 페이지 View 호출 */
		return "redirect:/board/list";
	}
	
	@RequestMapping(value = "/naverTerms", method = { RequestMethod.GET, RequestMethod.POST })
	public String naverTerms(MemberVO memberVO) {
		log.info("------------------들어오냐????");
		log.info(memberVO);
		
		memberService.oauthJoin(memberVO);
		
		return "redirect:/board/list";
	}
}