package net.yangchoo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class WebSocketHandler extends TextWebSocketHandler {
	ObjectMapper objectMapper = new ObjectMapper();
	private List<WebSocketSession> sessions = new ArrayList<>();
		
	// 웹소켓 세션 연결
	@Override
	public void afterConnectionEstablished(WebSocketSession session) throws Exception {
		//Authentication auth = SecurityContextHolder.getContext().getAuthentication();
		
		System.out.println(session.getPrincipal().getName());
		log.info("========접속========");
		sessions.add(session);
	}
	
	// 웹소켓 메세지 전송시
	
	@Override
	protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
		for(WebSocketSession sess : sessions) {
			sess.sendMessage(new TextMessage(message.getPayload()));
			log.info("메세지 송수신 :: " + message.getPayload());
		}
		
	}
	
	// 세션 커넥터 종료
	@Override
	public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception {
		
		sessions.remove(session);
		log.info("퇴장 : ", session);
	}
}
