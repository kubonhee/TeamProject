<%@ page language="java" contentType="text/html; charset=utf-8" pageEncoding="utf-8"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
    <meta charset="UTF-8">
    <title>채팅 서비스</title>
    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
 
    <!-- 부가적인 테마 -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
 
    <!-- 합쳐지고 최소화된 최신 자바스크립트 -->
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
 	<script type="text/javascript"
	src="https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.1.5/sockjs.min.js"></script>
</head>
<body>
    <!-- <input type="text" id="nickname" class="form-inline" placeholder="닉네임을 입력해주세요" required autofocus>
    <button class = "btn btn-primary" id = "name">확인</button>
    <div id = "chatroom" style = "width:400px; height: 600px; border:1px solid; background-color : gray"></div>
    <input type = "text" id = "message" style = "height : 30px; width : 340px" placeholder="내용을 입력하세요" autofocus>
    <button class = "btn btn-primary" id = "send">전송</button> -->
    <sec:authentication property="principal" var="member"/>
    <h3>채팅 페이지</h3>
	나의 이름: <input type="text" id="name" value="${member.username}" readonly="readonly"><br>
	귓속말할 상대 아이디: <input type="text" id="toId" value="${param.writer}" readonly="readonly"><br>
	메시지: <input type="text" id="message-input"><br>
	
	<div>
		<button type="button" id="btnOpen">입장</button>
		<button type="button" id="btnSend">전송</button>
		<button type="button" id="btnClose">나가기</button>
	</div>
	
	<div id="messages" style="overflow: auto; width: 500px; height: 500px; border: 1px solid black;"></div>
	
	<br><br>
	<a href="/">HOME</a>
    
    <script>
        /*var webSocket;
        var nickname;
        document.getElementById("name").addEventListener("click", function(){
            nickname = document.getElementById("nickname").value;
            document.getElementById("nickname").style.display="none";
            document.getElementById("name").style.display="none";
            connect();
        })
        document.getElementById("send").addEventListener("click",function(){
            send();
        })
        function connect(){
            webSocket = new WebSocket("ws://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}/websocket/handler");
            webSocket.onopen = onOpen;
            webSocket.onclose = onClose;
            webSocket.onmessage = onMessage;
        }
        function disconnect(){
            webSocket.send(nickname + "님이 퇴장하셨습니다");
            webSocket.close();
        }
        function send(){
            msg = document.getElementById("message").value;
            webSocket.send(nickname + " : " + msg);
            document.getElementById("message").value = "";
        }
        function onOpen(){
            webSocket.send(nickname + "님이 입장하셨습니다.");
        }
        function onMessage(e){
            data = e.data;
            chatroom = document.getElementById("chatroom");
            chatroom.innerHTML = chatroom.innerHTML + "<br>" + data;
        }
        function onClose(){
 
        }
        
        var sock = new SockJS("http://localhost:8080/websocket/handler");
    	sock.onmessage = onMessage;
    	sock.onclose = onClose;
    	sock.onopen = onOpen;
    	
    	document.getElementById("name").addEventListener("click", function(){
            document.getElementById("nickname").style.display="none";
            document.getElementById("name").style.display="none";
        })
    	
    	var user = '${userId}';
    	function onOpen() {
    		sock.send(user + "님이 입장하셨습니다.");
    	}
    	
    	$("#send").click(function() {
    		sendMessage();
    		$('#message').val('');
    	});

    	// 메시지 전송
    	function sendMessage() {
    		msg = document.getElementById("message").value;
            sock.send(user + " : " + msg);
            document.getElementById("message").value = "";
    	}
    	
    	// Notification 권한 여부 확인하기
    	window.onload = function() {
			if(window.Notification) {
				Notification.requestPermission();
			}
		}
    	
    	// 서버로부터 메시지를 받았을 때
    	function onMessage(e) {
    		data = e.data;
            chatroom = document.getElementById("chatroom");
            chatroom.innerHTML = chatroom.innerHTML + "<br>" + data;
            
            // Notification 알림
            function calculate() {
        		setTimeout(function() {
    				notify();
    			}, 100);
    			
    		}
        	
        	function notify() {
    			if(Notification.permission != 'granted') {
    				alert('notification is disabled');
    			} else {
    				var notification = new Notification('메시지가 도착하였습니다!', {
    					icon : 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',
    					body : e.data,
    				});
    				
    				setTimeout(function() {
						notification.close();
					}, 3000);
    				
    				notification.onclick = function() {
    					window.open('http://localhost:8080/chat');
    				}
    			}
    		}
            calculate();
            
    	}
    	// 서버와 연결을 끊었을 때
    	function onClose() {
    		sock.send(user + "님이 퇴장하셨습니다.");
    	} */
    	
    	/* var sock = new SockJS("http://localhost:8080/websocket/handler");
    	sock.onmessage = onMessage;
    	sock.onclose = onClose;
    	sock.onopen = onOpen; */
    	
    	var sock = new SockJS("http://localhost:8080/websocket/handler");
    	sock.onmessage = onMessage;
    	sock.onclose = onClose;
    	sock.onopen = onOpen;
    	
    	/* var sock; 
    	sock = new WebSocket("ws://localhost:8080/websocket/handler"); */
   		//sock = new SockJS('/chat-socket');
   		// 서버와 연결이 완료된후 자동호출됨
   		function onOpen(event) {
   			$('#messages').append('연결되었습니다.<br>');
   			scroll();
   		}
   		
   		// onmessage는 서버로부터 메시지를 받았을때 호출됨
   		function onMessage(event) {
   			console.log('event.data : ' + event.data);
   			var message = JSON.parse(event.data);
   			console.log('message : ' + message);
   			
   			var str = '(' + message.fromId + ') :: ' + message.content  + '<br>';
   			
   			$('#messages').append(str);
   			console.log(message.fromId);
   			$("#toId").val(message.fromId);
   			scroll();
   		};
   		
   		function onClose(event) {
   			$('#messages').append('연결이 끊어졌습니다.<br>');
   			scroll();
   		}

    	function send() {
    		var inputMessage = $('#message-input').val();
    		if (inputMessage == '') {
    			return;
    		}
    		var message = {};
    		message.fromId = '${member.username}';
    		message.toId = '';
    		message.content = inputMessage;
    		
    		var toId = $('#toId').val();
    		if (toId != '') {
    			message.toId = toId;
    		}
    		
    		console.log('message : ' + message);
    		sock.send(JSON.stringify(message));
    		
    		var str = '<span style="color: red;">' + '(' + message.fromId + ') :: ' + message.content  + '</span><br>';
    		$('#messages').append(str);
    		scroll();
    		
    		$('#message-input').val('');
    	}

    	function scroll() {
    		var top = $('#messages').prop('scrollHeight');
    		$('#messages').scrollTop(top);
    	}


    	$(document).ready(function () {
    		
    		$('#btnOpen').on('click', function (event) {
    			openSocket();
    		});
    		
    		$('#btnClose').on('click', function (event) {
    			closeSocket();
    		});
    		
    		$('#btnSend').on('click', function (event) {
    			send();
    		});
    		
    		$('#message-input').on('keydown', function (event) {
    			if (event.keyCode == 13) { // 엔터키
    				send();
    			}
    		});
    	});
    	</script>
</body>
</html>